<?php

/**
 * @file
 * Provides a fh tour entity type.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\file\Entity\File;

/**
 * Implements hook_theme().
 *
 * Define the Template for the view and form template
 *
 * View: fh-tour.html.twig
 * Form: form--inner-fh-tour.html.twig
 */
function fh_tour_theme() {
  return [
    'fh_tour' => [
      'render element' => 'elements',
      'template' => 'form/fh-tour',
    ],
    'fh_tour_form' => [
      'render element' => 'form',
      'template' => 'form/form--inner-fh-tour',
    ],
    'fh_tour_sight_form' => [
      'render element' => 'elements',
      'template' => 'form/form--fh-tour-sight',
    ],
  ];
}

/*
 * Implements hook_theme_suggestions_alter().
 *
 * Define a outer Form Theme suggesteion to manipulate the <form> element.
 * Unfortunately it is not possible to place the template file itself in our module/templates folder
 *
 * Template suggestion: mytheme/templates/form/form-outer-fh-tour.html.twig
 *
 */
function fh_tour_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'form' & !empty($variables['element']['#id']) & !empty($variables['element']['#entity_type'])) {
    if ($variables['element']['#entity_type'] == 'fh_tour') {
      $suggestions[] = 'form__outer_fh_tour';
    }
  }
}
/**
 * Prepares variables for fh tour templates.
 *
 * Default template: fh-tour.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the fh tour information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_fh_tour(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}




